#!/usr/bin/env python3
#pyzipper-0.3.3

import requests
import sys
import argparse
import json
import pyzipper

def check_for_word(string, word):
  string = string.lower()
  string = string.strip( )
  return string.find(word)


def check_sha256(s):
    if s == "":
        return
    if len(s) != 64:
        raise argparse.ArgumentTypeError("Please use sha256 value instead of '" + s + "'")
    return str(s)

def download_sample(hash, unzip, info):

  if(unzip == True and info == True):
      print("Sorry, please select unzip or information display.")
      sys.exit(1)

  ZIP_PASSWORD = b'infected'
  headers = { 'API-KEY': 'xxx' }

  if(info == False):
      data = {
          'query': 'get_file',
          'sha256_hash': hash,
      }

      response = requests.post('https://mb-api.abuse.ch/api/v1/', data=data, timeout=15, headers=headers, allow_redirects=True)

      if 'file_not_found' in response.text:
          print("Error: file not found")
          sys.exit()
      else:
          open(hash+'.zip', 'wb').write(response.content)

          if(unzip == True):
              with pyzipper.AESZipFile(hash+".zip") as zf:
                  zf.pwd = ZIP_PASSWORD
                  my_secrets = zf.extractall(".")
                  print("Sample \""+hash+"\" downloaded and unpacked.")
                  if my_secrets == None:
                     os.remove(hash+".zip")
          else:
              print(my_secrets)
              print("Sample \""+hash+"\" downloaded.")

  else:
      data = {
          'query': 'get_info',
          'hash': hash,
      }
      print(data)
      response = requests.post('https://mb-api.abuse.ch/api/v1/', data=data, timeout=15, headers=headers)
      print(response.content.decode("utf-8", "ignore"))
